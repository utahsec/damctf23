# chal metadata
name: Muffin Kicker
author: Jonathan Keller
description: |-
  (This is a rev challenge)

  I'm working on a NES game! But I haven't added a player yet. Can you make it to the fifth level anyway?

  `stty -icanon && nc {{ host }} {{ port }}`

# these are files that are given to the player. if you need things from the container (i.e. compiled binary, libc),
# push the challenge branch and download the artifacts from the CI/CD job
# if no files are provided, delete this block
provide:
- ./muffin_kicker.nes

# this should usually be the flag file so that it doesn't get out of sync if you change it
flag:
  file: ./flag

# visible controls rCTF status, deployed controls k8s status. THESE SHOULD ALWAYS BE THE SAME
visible: true
deployed: true

# specify the containers to be built
# replicas should be 2 unless resource intensive (>2) or stateful (1)
# make sure to update the port for what you are exposing in the Dockerfile
containers:
  main:
    build: ./potatis/
    replicas: 2
    ports:
    - 4444
    resources:
      limits:
        cpu: 500m
        memory: 150Mi
      requests:
        cpu: 300m
        memory: 30Mi

# make sure to only expose the target container (i.e. http but not mysql)
expose:
  main:
  - target: 4444 # this is the container's EXPOSE port
    tcp: 30444  # raw NodePort that is exposed publicly (use this for nc chals). must be unique and within 30000-32767
